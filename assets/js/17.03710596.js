(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{499:function(t,a,r){"use strict";r.r(a);var v=r(4),s=Object(v.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("用于 HTTP 协议交互的信息被称为 HTTP 报文。请求端（客户端）的 HTTP 报文叫做请求报文，响应端的自然叫做响应报文。")]),t._v(" "),r("h2",{attrs:{id:"http-报文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http-报文","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 报文")]),t._v(" "),r("p",[t._v("HTTP 报文大致可以分为报文首部和报文主体两块。两者由最初出现的空行（CR+LF）来划分。")]),t._v(" "),r("p",[t._v("通常，不一定要有报文主体。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gfmi9w7smnj30cj03dmy9.jpg",alt:"1550476287842"}})]),t._v(" "),r("h2",{attrs:{id:"请求报文及响应报文结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#请求报文及响应报文结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 请求报文及响应报文结构")]),t._v(" "),r("p",[t._v("我们来看一下请求报文和响应报文的结构：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gfmia1vw13j30cj05ign5.jpg",alt:"1550476250723"}})]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlgy1gfmi9yk1lwj30cg0b6aeu.jpg",alt:"1550476362506"}})]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("请求行")]),t._v("：包含用于请求的方法，请求 URI 和 HTTP 版本")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("状态行")]),t._v("：包含表明响应结果的状态码，原因短语和 HTTP 版本")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("首部字段")]),t._v("：包含表示请求和响应的各种条件和属性的各类首部。")]),t._v(" "),r("p",[t._v("​                   一般有 4 种首部，分别是：通用首部、请求首部、响应首部和实体首部。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("其他")]),t._v("：可能包含 HTTP 的 RFC 里未定义的首部（Cookie 等）。")])])]),t._v(" "),r("h2",{attrs:{id:"编码提高效率"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编码提高效率","aria-hidden":"true"}},[t._v("#")]),t._v(" 编码提高效率")]),t._v(" "),r("p",[t._v("报文在传输中，一般会用算法进行压缩，以加快传输速率。")]),t._v(" "),r("p",[t._v("常用的内容编码有以下几种。")]),t._v(" "),r("ul",[r("li",[t._v("gzip（GNU zip）")]),t._v(" "),r("li",[t._v("compress（UNIX 系统的标准压缩）")]),t._v(" "),r("li",[t._v("deflate（zlib）")]),t._v(" "),r("li",[t._v("identity（不进行编码）")])]),t._v(" "),r("h2",{attrs:{id:"分割发送的分块传输编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分割发送的分块传输编码","aria-hidden":"true"}},[t._v("#")]),t._v(" 分割发送的分块传输编码")]),t._v(" "),r("p",[t._v("在 HTTP 通信过程中，请求的编码实体资源尚未全部传输完成之前， 浏览器无法显示请求页面。在传输大容量数据时，通过把数据分割成 多块，能够让浏览器逐步显示页面。")]),t._v(" "),r("p",[t._v("这种把实体主体分块的功能称为分块传输编码（Chunked Transfer Coding）。")]),t._v(" "),r("h2",{attrs:{id:"获取部分内容的范围请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#获取部分内容的范围请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 获取部分内容的范围请求")]),t._v(" "),r("p",[t._v("以前，用户不能使用现在这种高速的带宽访问互联网，当时，下载一 个尺寸稍大的图片或文件就已经很吃力了。如果下载过程中遇到网络 中断的情况，那就必须重头开始。为了解决上述问题，需要一种可恢 复的机制。所谓恢复是指能从之前下载中断处恢复下载。 要实现该功能需要指定下载的实体范围。像这样，指定范围发送的请 求叫做范围请求（Range Request）。 对一份 10 000 字节大小的资源，如果使用范围请求，可以只请求 5001~10 000 字节内的资源。")])])},[],!1,null,null,null);a.default=s.exports}}]);