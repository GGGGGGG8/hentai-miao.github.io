(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{567:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("周末翻译了两篇基础性质的文章，这篇讲 JS 中的不可变性和 immer")]),t._v(" "),s("p",[t._v("原文地址：https://www.smashingmagazine.com/2020/06/better-reducers-with-immer/")]),t._v(" "),s("blockquote",[s("p",[t._v("速览：在本文中，我们将学习如何使用 Immer 书写 reducers。在使用 React 时我们经常会维护大量的 state，同时为更新 state 需要创建很多 reducers。在组件状态 state 的每一个地方手动编写 reducer 会导致代码膨胀，这很容易导致代码出错。本文将告诉你，Immer 如何将编写 state reducers 的过程变得更简单。")])]),t._v(" "),s("p",[t._v("作为 React 开发者，你应该对这条原则很熟悉：state 数据不应该是可变的，你可能会想这是什么意思（很多人开始时都会对此感到困惑）。")]),t._v(" "),s("p",[t._v("本文将解释这一切：你将明白什么是不可变数据，为什么需要不可变数据；如何使用 Immer 去处理不可变数据和使用 Immer 的好处。")]),t._v(" "),s("p",[t._v("你可以在这个仓库找到本文的示例代码："),s("a",{attrs:{href:"https://github.com/chidimo/immutability-in-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("repo"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"javascript-的不可变性及其重要性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-的不可变性及其重要性","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript 的不可变性及其重要性")]),t._v(" "),s("p",[t._v("Immer.js 是由 Michel Weststrate 编写的一个轻量级 JavaScript 库，其目标是允许你「以更方便地方式处理不可变状态」。但是在开始进入 Immer 之前，让我们快速重温一下 JavaScript 中的不变性及其在 React 项目中的重要性。")]),t._v(" "),s("p",[t._v("最新的 ECMAScript（aka JavaScript）标准定义了九种内置数据类型，在这九种类型中，有六种被称为原始值/类型。这六种是 "),s("code",[t._v("undefined")]),t._v("/"),s("code",[t._v("number")]),t._v("/"),s("code",[t._v("string")]),t._v("/"),s("code",[t._v("boolean")]),t._v("/"),s("code",[t._v("bigint")]),t._v("/"),s("code",[t._v("symbol")]),t._v("。通过对 JavaScript 的 "),s("code",[t._v("typeof")]),t._v(" 运算符进行简单检查，即可了解这些数据所对应的数据类型。")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" undefined"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// symbol")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("900719925474")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bigint")]),t._v("\n")])])]),s("p",[t._v("一个 "),s("code",[t._v("primitive")]),t._v(" 原始值/类型是一个不是对象且没有方法的值，对于当前讨论最重要的是，原始类型值 "),s("code",[t._v("primitive")]),t._v(" 一旦创建就无法更改。因此，原始类型值 "),s("code",[t._v("primitive")]),t._v(" 是不可改变的。")]),t._v(" "),s("p",[t._v("其余的三种类型为 "),s("code",[t._v("null")]),t._v("/"),s("code",[t._v("object")]),t._v("/"),s("code",[t._v("function")]),t._v("，用 "),s("code",[t._v("typeof")]),t._v(" 检查一下：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// function")]),t._v("\n")])])]),s("p",[t._v("这些类型是可变的，这意味着它们的值可以在创建之后随时更改。")]),t._v(" "),s("p",[t._v("你可能想知道为什么我有数组 "),s("code",[t._v("[0, 1]")]),t._v("，在 JavaScript 世界中，数组知识对象的一种特殊类型。如果你还想知道 "),s("code",[t._v("null")]),t._v(" 和 "),s("code",[t._v("undefined")]),t._v(" 有什么不同，"),s("code",[t._v("undefined")]),t._v(" 指我们没有给变量设置值，而 "),s("code",[t._v("null")]),t._v(" 是对象的特殊情况，如果你知道某个对象应该是一个对象但是这个对象并不存在，则只需要返回 "),s("code",[t._v("null")]),t._v("。（译者：它们大多数情况是可以相互替代的，一些开发者不用 "),s("code",[t._v("null")]),t._v(" 只使用 "),s("code",[t._v("undefined")]),t._v(" 以降低类型复杂度）")]),t._v(" "),s("p",[t._v("为了举例说明，可以在浏览器控制台中运行以下代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aeiou'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[x]/gi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xyzabc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[x]/gi")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 'x' ]")]),t._v("\n")])])]),s("p",[s("code",[t._v("String.prototype.match")]),t._v(" 应该返回一个数组，这是一个对象类型。如果找不到此类对象，则返回 "),s("code",[t._v("null")]),t._v("，返回 "),s("code",[t._v("undefined")]),t._v(" 在这里也没有意义。")]),t._v(" "),s("p",[t._v("够了，让我们把话题回到不可变性。")]),t._v(" "),s("p",[t._v("根据 MDN 文档：")]),t._v(" "),s("blockquote",[s("p",[t._v("“除对象以外的所有类型都定义了不可变的值（即不能更改的值）。”")]),t._v(" "),s("p",[s("em",[t._v("“All types except objects define immutable values (that is, values which can’t be changed).”")])])]),t._v(" "),s("p",[t._v("该语句包含了函数，因为它们是 JavaScript 对象的一种特殊类型，"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Function",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考函数定义"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("让我们快速了解一下可变和不可变数据类型在实际中的含义。尝试在控制台运行以下代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`a: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("; b: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a: 5; b: 5")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`a: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("; b: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a: 5; b: 7")]),t._v("\n")])])]),s("p",[t._v("结果显示，即使 "),s("code",[t._v("b")]),t._v(" 是从 "),s("code",[t._v("a")]),t._v(" 派生出来的，更改 "),s("code",[t._v("b")]),t._v(" 的值也不会影响 "),s("code",[t._v("a")]),t._v(" 的值。这是由于 JavaScript 引擎执行语句 "),s("code",[t._v("b = a")]),t._v(" 时，它会创建一个新的单独的内存位置，在其中放置 5，然后将 "),s("code",[t._v("b")]),t._v(" 指向该位置。")]),t._v(" "),s("p",[t._v("那对象呢？参考以下代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`c: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("; d: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// {"name":"some name"}; d: {"name":"some name"}')]),t._v("\n\nd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new name'")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`c: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("; d: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// {"name":"new name"}; d: {"name":"new name"}')]),t._v("\n")])])]),s("p",[t._v("我们可以看到，通过变量 "),s("code",[t._v("d")]),t._v(" 更改 "),s("code",[t._v("name")]),t._v(" 属性也会在 "),s("code",[t._v("c")]),t._v(" 中更改它。这是由于 JavaScript 引擎执行语句 "),s("code",[t._v("c = { name: 'some name' }")]),t._v(" 时，会在内存中创建一个空间，将对象放在其中，并指向 c。然后，执行 "),s("code",[t._v("d = c")]),t._v(" 时，JavaScript 引擎仅仅将 "),s("code",[t._v("d")]),t._v(" 指向相同的位置，它不会创建新的存储位置。因此，对 "),s("code",[t._v("d")]),t._v(" 中项目的任何更改都暗含了对 "),s("code",[t._v("c")]),t._v(" 中项目的操作。很清晰，我们就能明白这会造成什么样的麻烦。")]),t._v(" "),s("p",[t._v("假设你正在开发一个 React 应用程序，并且想在某个地方通过读取变量 "),s("code",[t._v("c")]),t._v(" 将用户名显示为某些名称。但是在其他地方存在对 "),s("code",[t._v("c")]),t._v(" 的引用 "),s("code",[t._v("d")]),t._v("，这引入了错误，这会导致使用者的命名看上去是新的命名。如果 "),s("code",[t._v("c")]),t._v(" 和 "),s("code",[t._v("d")]),t._v(" 是基本数据类型，就不会有这个问题，但是对于 React 而言，仅使用基本数据类型是不够的。")]),t._v(" "),s("p",[t._v("这是应该重视在应用中保持状态不可变的主要原因，我鼓励你通过阅读 Immutable.js 文档中的一小节来了解其它一些注意事项："),s("a",{attrs:{href:"https://github.com/immutable-js/immutable-js/#the-case-for-immutability",target:"_blank",rel:"noopener noreferrer"}},[t._v("the case for immutability"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("了解了为什么我们需要在 React 应用中实现数据不可变性之后，现在让我们看一下 Immer 如何通过 "),s("code",[t._v("produce")]),t._v(" 函数解决问题。")]),t._v(" "),s("h2",{attrs:{id:"immer-中的-produce-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immer-中的-produce-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" Immer 中的 "),s("code",[t._v("produce")]),t._v(" 函数")]),t._v(" "),s("p",[t._v("Immer 的核心 API 很小，你要使用的主要功能就是 "),s("code",[t._v("produce")]),t._v(" 函数，"),s("code",[t._v("produce")]),t._v(" 只需要一个初始状态和一个回调函数，该回调函数定义了如何处理状态。回调函数本身会受到对其所有预期更新的状态的 "),s("code",[t._v("draft")]),t._v("（相同，但是仍然是副本）（译者：草稿，可以理解为数据代理）。最后，在应用所有更改结束后，将产生一个新的、不可变的状态。（译者：类似于深拷贝数据，但有所不同）")]),t._v(" "),s("p",[t._v("这种状态更新的一般模式是：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// produce signature")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("produce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" nextState\n")])])]),s("p",[t._v("让我们来看它在实际编码中怎么运用：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" produce "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immer'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  pets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dog'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// to add a new package")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPackage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("produce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("draft")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newPackage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在上面的代码中，我们只是传递了起始状态和一个回调函数，该回调指定了我们期望突变（mutation）发生的处理方式："),s("code",[t._v("draft.packages.push(newPackage)")]),t._v("。就是这么简单，不需要接触这个状态对象的其它任何地方，它使 "),s("code",[t._v("initState")]),t._v(" 保持不变，并且在结构上共享了我们在开始状态和新状态之间没有接触到的状态。在这个例子中指的就是 "),s("code",[t._v("pets")]),t._v(" 数组属性，产生的 "),s("code",[t._v("nextState")]),t._v(" 是一颗不可变的状态树，其中包含我们所做的更改以及未修改的部分。")]),t._v(" "),s("p",[t._v("掌握了这些简单但是有用的知识之后，我们来看 "),s("code",[t._v("produce")]),t._v(" 如何帮助我们简化 React 的 "),s("code",[t._v("reducers")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"使用-immer-书写-reducers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-immer-书写-reducers","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Immer 书写 Reducers")]),t._v(" "),s("p",[t._v("假设我们有如下定义的状态对象：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  pets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dog'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们想要添加一个新对象，并且将 "),s("code",[t._v("installed")]),t._v(" 属性设置为 "),s("code",[t._v("true")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newPackage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如果我们要使用 "),s("code",[t._v("JavaScript")]),t._v(" 对象和数组扩展语法进行常规操作，则 reducer 可能会这样：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateReducer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_PACKAGE'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'UPDATE_INSTALLED'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("pack")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n          pack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("pack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("installed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pack\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们能看到，对于这个相对简单的状态对象而言，"),s("code",[t._v("...state")]),t._v(" 这是不必要的冗余代码并且容易出错，我们没必要考虑对象的每一个属性，让我们看看 "),s("code",[t._v("immer")]),t._v(" 如何简化：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateReducerWithProduce")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("produce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("draft")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_PACKAGE'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'UPDATE_INSTALLED'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("installed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("通过几行代码大大简化了 "),s("code",[t._v("reducer")]),t._v("，同样，如果我们进入了默认情况，"),s("code",[t._v("immer")]),t._v(" 只会返回 "),s("code",[t._v("draft")]),t._v(" 状态，并不执行任何操作。注意它是如何实现减少样板代码和状态扩散的，有了 Immer，我们只关心我们需要的状态部分。如果找不到这样一个操作，（比如在 "),s("code",[t._v("UPDATE_INSTALLED")]),t._v("  操作中），将跳过操作，没有多余的执行。"),s("code",[t._v("produce")]),t._v("函数也很方便用于柯里化，将回调函数作为 "),s("code",[t._v("produce")]),t._v(" 的第一个参数便能实现柯里化。柯里化 "),s("code",[t._v("produce")]),t._v(" 的代码结构如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//curried produce signature")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("produce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" nextState\n")])])]),s("p",[t._v("让我们看一下，如何使用柯里化后的 "),s("code",[t._v("produce")]),t._v(" 来组织之前的 "),s("code",[t._v("state")]),t._v("，像这样：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" curriedProduce "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("produce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_PACKAGE'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("package"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SET_INSTALLED'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("packages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("installed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("柯里化的 "),s("code",[t._v("produce")]),t._v(" 函数接受一个函数作为第一个参数，并返回一个柯里化的 "),s("code",[t._v("produce")]),t._v("，该柯里化 "),s("code",[t._v("produce")]),t._v(" 仅需要一个状态，从而去生产处理后的状态。该函数的第一个参数是草稿状态（"),s("code",[t._v("draft state")]),t._v("，当调用这个柯里化 "),s("code",[t._v("produce")]),t._v(" 函数并将状态 "),s("code",[t._v("state")]),t._v(" 传递进去时产生）。接下来跟随我们希望传给该函数的每一个参数。我们现在要用这个函数做的，是传递状态和对应的数据处理操作：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add a new package to the starting state")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curriedProduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_PACKAGE'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" newPackage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update an item in the recently produced state")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nextState2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curriedProduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SET_INSTALLED'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'immer'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  installed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("注意，在 React 应用中使用 "),s("code",[t._v("useReducer")]),t._v(" 时，我们不需要像上面所做的那样，显示地传递状态，因为 "),s("code",[t._v("useReducer")]),t._v(" 本身可以处理这样的问题。")]),t._v(" "),s("p",[t._v("你可能会想知道，"),s("code",[t._v("immer")]),t._v(" 是否会像最近 "),s("code",[t._v("React")]),t._v(" 中的 "),s("code",[t._v("hooks")]),t._v(" 一样吸引人？好吧，"),s("code",[t._v("immer")]),t._v(" 也提供两个用于处理状态的钩子："),s("code",[t._v("useImmer")]),t._v(" 和 "),s("code",[t._v("useImmerReducer")]),t._v("，让我们看看它们是如何生效的。")]),t._v(" "),s("h2",{attrs:{id:"使用-useimmer-和-useimmerreducer-钩子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-useimmer-和-useimmerreducer-钩子","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 useImmer 和 useImmerReducer 钩子")]),t._v(" "),s("p",[t._v("关于 "),s("code",[t._v("useImmer")]),t._v(" 的最好描述可以从 "),s("code",[t._v("use-immer")]),t._v(" 项目中的 "),s("code",[t._v("README")]),t._v(" 中找到：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("useImmer(initialState)")]),t._v(" 和 "),s("code",[t._v("useState")]),t._v(" 很相像，这个方法返回一个元祖（"),s("code",[t._v("tuple")]),t._v("），元祖的第一个值是当前状态，第二个值是更新函数，它接受一个 "),s("a",{attrs:{href:"https://github.com/mweststrate/immer#api",target:"_blank",rel:"noopener noreferrer"}},[t._v("immer producer function"),s("OutboundLink")],1),t._v("，在函数中 "),s("code",[t._v("draft")]),t._v(" 状态可以自由更改，直到 "),s("code",[t._v("producer")]),t._v(" 结束，这个变更后的数据是不可变的，并且可以作为下一次的状态。")]),t._v(" "),s("p",[s("code",[t._v("useImmer(initialState)")]),t._v(" "),s("em",[t._v("is very similar to")]),t._v(" "),s("a",{attrs:{href:"https://reactjs.org/docs/hooks-state.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("useState")]),s("OutboundLink")],1),s("em",[t._v(". The function returns a tuple, the first value of the tuple is the current state, the second is the updater function, which accepts an")]),t._v(" "),s("a",{attrs:{href:"https://github.com/mweststrate/immer#api",target:"_blank",rel:"noopener noreferrer"}},[t._v("immer producer function"),s("OutboundLink")],1),s("em",[t._v(", in which the")]),t._v(" "),s("code",[t._v("draft")]),t._v(" "),s("em",[t._v("can be mutated freely, until the producer ends and the changes will be made immutable and become the next state.")])])]),t._v(" "),s("p",[t._v("要使用这些 "),s("code",[t._v("hooks")]),t._v("，除了必要的 "),s("code",[t._v("immer")]),t._v(" 库之外，还需要单独安装它们：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" immer use-immer\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i immer use-immer\n")])])]),s("p",[t._v("在代码中，"),s("code",[t._v("useImmer")]),t._v(" 会像这样使用：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useImmer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use-immer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" updateData "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useImmer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("就是这么简单，你可以说这是 React 的 "),s("code",[t._v("useState")]),t._v(" 带着一下升级。使用状态函数 "),s("code",[t._v("updateData")]),t._v(" 很简单，它接受到 "),s("code",[t._v("draft")]),t._v(" 状态，你可以根据自身需要随便更改：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make changes to data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("draft")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// modify the draft as much as you want.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("Immer")]),t._v(" 的创建者提供了一个 "),s("a",{attrs:{href:"https://codesandbox.io/s/l97yrzw8ol",target:"_blank",rel:"noopener noreferrer"}},[t._v("codesandbox"),s("OutboundLink")],1),t._v(" 例子，你可以尝试运行。")]),t._v(" "),s("p",[t._v("如果你使用过 React 的 "),s("code",[t._v("useReducer")]),t._v(" 钩子，那么 "),s("code",[t._v("useImmerReducer")]),t._v(" 同样简单易用，它具有相似的签名，让我们来看看代码：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useImmerReducer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use-immer"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" initState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reducer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("      \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dataDispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useImmerReducer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们可以看到，"),s("code",[t._v("reducer")]),t._v(" 收到了 "),s("code",[t._v("draft")]),t._v(" 状态，我们可以根据需要进行处理，这里也有一个 "),s("a",{attrs:{href:"https://codesandbox.io/s/2zor1monvp",target:"_blank",rel:"noopener noreferrer"}},[t._v("codesandbox"),s("OutboundLink")],1),t._v(" 例子供你体验。")]),t._v(" "),s("p",[t._v("这就是使用 "),s("code",[t._v("immer")]),t._v(" 的简单之处，如果你仍想知道在项目中使用 "),s("code",[t._v("immer")]),t._v(" 的具体原因，下面是使用 "),s("code",[t._v("immer")]),t._v(" 的一些重要因素。")]),t._v(" "),s("h2",{attrs:{id:"为什么你应该使用-immer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么你应该使用-immer","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么你应该使用 Immer")]),t._v(" "),s("p",[t._v("如果你编写状态管理逻辑已经有一段时间，那么你将很快体会到 "),s("code",[t._v("immer")]),t._v(" 提供的简便性。但这并不是 "),s("code",[t._v("immer")]),t._v(" 提供的唯一好处。")]),t._v(" "),s("p",[t._v("当你使用 "),s("code",[t._v("immer")]),t._v(" 时，最终会减少书写样板代码的次数，就像我们通过对相对简单 "),s("code",[t._v("reducer")]),t._v(" 进行的处理那样。同时也会让层级较深情况下的数据更新变得容易。")]),t._v(" "),s("p",[t._v("在使用 "),s("a",{attrs:{href:"https://github.com/immutable-js/immutable-js/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immutable.js"),s("OutboundLink")],1),t._v(" 之类的库时，你必须学习新的 "),s("code",[t._v("API")]),t._v(" 才能获得数据不变性的好处，但是使用 "),s("code",[t._v("immer")]),t._v("，你可以使用普通的 JavaScript "),s("code",[t._v("Objects")]),t._v("、"),s("code",[t._v("Arrays")]),t._v("、"),s("code",[t._v("Sets")]),t._v(" 和 "),s("code",[t._v("Maps")]),t._v("。这没有新的学习成本。")]),t._v(" "),s("p",[s("code",[t._v("immer")]),t._v(" 默认还提供结构共享，这仅意味着，当你对状态对象进行变更时，"),s("code",[t._v("immer")]),t._v(" 会在新状态和之前状态之间自动共享状态的未变更部分。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("immer")]),t._v("，你还可以自动冻结对象，这意味着你无法更改被 "),s("code",[t._v("produce")]),t._v(" 的状态。例如，当我开始使用 "),s("code",[t._v("immer")]),t._v(" 的时候，我尝试将 "),s("code",[t._v("sort")]),t._v(" 方法用于 "),s("code",[t._v("immer")]),t._v(" 的 "),s("code",[t._v("produce")]),t._v(" 函数返回的对象数组。这将发生错误，告知我无法对 "),s("code",[t._v("array")]),t._v(" 进行更改。我必须在进行排序操作之前进行 "),s("code",[t._v("array")]),t._v(" 切片操作。再说一遍，生产出的 "),s("code",[t._v("nextState")]),t._v(" 是不可变状态树。")]),t._v(" "),s("p",[s("code",[t._v("immer")]),t._v(" 的类型检查也很强，同时压缩后只有 3KB，十分轻量。")]),t._v(" "),s("h2",{attrs:{id:"结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结论","aria-hidden":"true"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),s("p",[t._v("当管理状态更新时，使用 "),s("code",[t._v("immer")]),t._v(" 对我们来说是不费吹灰之力的。这是一个很轻巧的库，可以让你继续使用所学的关于 JavaScript 的所有知识，而不会产生额外的学习成本。我鼓励你将其安装在项目中并立即运用它，你可以在现有项目中添加使用它，并逐步改造你的 "),s("code",[t._v("reducer")]),t._v("。")]),t._v(" "),s("p",[t._v("推荐去阅读 "),s("a",{attrs:{href:"https://medium.com/hackernoon/introducing-immer-immutability-the-easy-way-9d73d8f71cb3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immer introductory blog post"),s("OutboundLink")],1),t._v(" by Michael Weststrate。我发现特别有趣的部分是 “Immer 如何工作？”章节，这章解释了 Immer 如何利用 JS 自身的功能如代理 "),s("a",{attrs:{href:"https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Global_Objects/Proxy",target:"_blank",rel:"noopener noreferrer"}},[t._v("proxies"),s("OutboundLink")],1),t._v(" 和概念 "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Copy-on-write",target:"_blank",rel:"noopener noreferrer"}},[t._v("copy-on-write"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("推荐阅读此博客文章："),s("a",{attrs:{href:"https://desalasworks.com/article/immutability-in-javascript-a-contrarian-view/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immutability in JavaScript: A Contratian View"),s("OutboundLink")],1),t._v("，文章作者 Steven de Salas 介绍了他关于追求不可变性的思想。")]),t._v(" "),s("p",[t._v("希望你通过这篇文章中学到的知识立即体验 Imemr。")]),t._v(" "),s("h2",{attrs:{id:"相关阅读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关阅读","aria-hidden":"true"}},[t._v("#")]),t._v(" 相关阅读")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://github.com/immerjs/use-immer",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("use-immer")]),s("OutboundLink")],1),t._v(", GitHub")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/immerjs/immer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immer"),s("OutboundLink")],1),t._v(", GitHub")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Function",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("function")]),s("OutboundLink")],1),t._v(", MDN web docs, Mozilla")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/nl/docs/Web/JavaScript/Reference/Global_Objects/Proxy",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("proxy")]),s("OutboundLink")],1),t._v(", MDN web docs, Mozilla")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Object_(computer_science)",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object (computer science)"),s("OutboundLink")],1),t._v(", Wikipedia")]),t._v(" "),s("li",[t._v("“"),s("a",{attrs:{href:"https://github.com/chidimo/immutability-in-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immutability in JS"),s("OutboundLink")],1),t._v(",” Orji Chidi Matthew, GitHub")]),t._v(" "),s("li",[t._v("“"),s("a",{attrs:{href:"https://tc39.es/ecma262/#sec-ecmascript-data-types-and-values",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMAScript Data Types and Values"),s("OutboundLink")],1),t._v(",” Ecma International")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/immutable-js/immutable-js/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Immutable collections for JavaScript"),s("OutboundLink")],1),t._v(", Immutable.js , GitHub")]),t._v(" "),s("li",[t._v("“"),s("a",{attrs:{href:"https://github.com/immutable-js/immutable-js/#the-case-for-immutability",target:"_blank",rel:"noopener noreferrer"}},[t._v("The case for Immutability"),s("OutboundLink")],1),t._v(",” Immutable.js , GitHub")])]),t._v(" "),s("h2",{attrs:{id:"番外-immer-js-精读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#番外-immer-js-精读","aria-hidden":"true"}},[t._v("#")]),t._v(" 番外：Immer.js 精读")]),t._v(" "),s("p",[t._v("来自知乎同名文章")]),t._v(" "),s("h3",{attrs:{id:"immer-js-精读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#immer-js-精读","aria-hidden":"true"}},[t._v("#")]),t._v(" Immer.js 精读")]),t._v(" "),s("p",[s("code",[t._v("Immer")]),t._v(" 是更底层的拼图，它可以插入到任何数据流框架作为功能增强，不得不感叹 Mweststrate 真的非常高瞻远瞩")]),t._v(" "),s("p",[s("code",[t._v("Immer")]),t._v(" 是一个支持柯里化，"),s("strong",[t._v("仅支持同步计算的工具")]),t._v("，所以非常适合作为 "),s("code",[t._v("redux")]),t._v(" 的 "),s("code",[t._v("reducer")]),t._v(" 使用")]),t._v(" "),s("blockquote",[s("p",[t._v("Immer 也支持直接 return value，这个功能比较简单，所以此功能跳过不谈")]),t._v(" "),s("p",[t._v("PS: mutable 与 return 不能同时返回不同对象，否则弄不清楚到哪种修改是有效的")])]),t._v(" "),s("p",[t._v("柯里化详情自行查看 "),s("a",{attrs:{href:"https://github.com/dominictarr/curry",target:"_blank",rel:"noopener noreferrer"}},[t._v("curry"),s("OutboundLink")],1),t._v("，我们来看 "),s("code",[t._v("produce")]),t._v(" 函数的 "),s("code",[t._v("callback")]),t._v(" 部分：")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("produce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("draft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  draft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("obj")]),t._v(" 是个普通对象，那么黑魔法一定出现在 "),s("code",[t._v("draft")]),t._v(" 对象，"),s("code",[t._v("Immer")]),t._v(" 给 "),s("code",[t._v("draft")]),t._v(" 对象的所有属性做了监听")]),t._v(" "),s("p",[t._v("所以整体思路就有了："),s("code",[t._v("draft")]),t._v(" 是 "),s("code",[t._v("obj")]),t._v(" 的代理，对 "),s("code",[t._v("draft")]),t._v(" mutable 的修改都会流入到自定义 "),s("code",[t._v("setter")]),t._v(" 函数，它并不修改原始对象的值，而是递归父级不断浅拷贝，最终返回新的顶层对象，作为 "),s("code",[t._v("produce")]),t._v(" 函数的返回值")]),t._v(" "),s("h3",{attrs:{id:"生成代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成代理")]),t._v(" "),s("p",[t._v("第一步，也就是将 "),s("code",[t._v("obj")]),t._v(" 转为 "),s("code",[t._v("draft")]),t._v(" 这一步，为了提高 "),s("code",[t._v("Immutable")]),t._v(" 的运行效率，需要一些额外信息，因此将 "),s("code",[t._v("obj")]),t._v(" 封装成一个包含额外信息的代理对象：")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tmodified"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否被修改过")]),t._v("\n  finalized"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否已经完成（所有 setter 完成，并且已经生成了 copy）")]),t._v("\n  parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父级对象")]),t._v("\n  base"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原始对象")]),t._v("\n  copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// base（也就是 obj）的浅拷贝，使用 Object.assign(Object.create(null), obj)实现")]),t._v("\n  proxies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储每个 propertyKey 的代理对象，采用懒初始化策略")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在这个代理对象上，绑定了自定义 "),s("code",[t._v("getter")]),t._v("、"),s("code",[t._v("setter")]),t._v("，然后直接将其扔给 "),s("code",[t._v("produce")]),t._v(" 执行")]),t._v(" "),s("h3",{attrs:{id:"getter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getter","aria-hidden":"true"}},[t._v("#")]),t._v(" getter")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("produce` 回调函数中包含了用户的 `mutable` 代码，所以现在入口变成了 `getter` 与 `setter\n")])])]),s("p",[s("code",[t._v("getter")]),t._v(" 主要用来懒初始化代理对象，也就是当代理对象子属性被访问的时候，才会生成其代理对象")]),t._v(" "),s("p",[t._v("这么说比较抽象，我们举个 🌰 ：")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("那么初始情况下，"),s("code",[t._v("draft")]),t._v(" 是 "),s("code",[t._v("obj")]),t._v(" 的代理，所以访问 "),s("code",[t._v("draft.a")]),t._v("、"),s("code",[t._v("draft.b")]),t._v("、"),s("code",[t._v("draft.c")]),t._v(" 时，都能触发 "),s("code",[t._v("getter")]),t._v("、"),s("code",[t._v("setter")]),t._v("，进入自定义处理逻辑，可是对 "),s("code",[t._v("draft.a.x")]),t._v(" 相当于访问了 "),s("code",[t._v("draftA.x")]),t._v("，所以能递归监听一个对象的所有属性")]),t._v(" "),s("p",[t._v("同时，如果代码中只访问了 "),s("code",[t._v("draft.a")]),t._v("，那么只会在内存生成 "),s("code",[t._v("draftA")]),t._v(" 代理，"),s("code",[t._v("b")]),t._v(" "),s("code",[t._v("c")]),t._v(" 属性因为没有访问，因此不需要浪费资源生成代理 "),s("code",[t._v("draftB")]),t._v("、"),s("code",[t._v("draftC")])]),t._v(" "),s("p",[t._v("当然 Immer 做了一些性能优化，以及在对象被修改过（"),s("code",[t._v("modified")]),t._v("）获取其 "),s("code",[t._v("copy")]),t._v(" 对象，为了保证 "),s("code",[t._v("base")]),t._v(" 是不可变的，这里不做展开")]),t._v(" "),s("h3",{attrs:{id:"setter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setter","aria-hidden":"true"}},[t._v("#")]),t._v(" setter")]),t._v(" "),s("p",[t._v("当对 "),s("code",[t._v("draft")]),t._v(" 修改时，会对 "),s("code",[t._v("base")]),t._v(" 也就是原始值进行浅拷贝，保存到 "),s("code",[t._v("copy")]),t._v(" 属性，同时将 "),s("code",[t._v("modified")]),t._v(" 属性设置为 "),s("code",[t._v("true")]),t._v("。这样就完成了最重要的 "),s("code",[t._v("Immutable")]),t._v(" 过程，而且浅拷贝并不是很消耗性能，加上是按需浅拷贝，因此 "),s("code",[t._v("Immer")]),t._v(" 的性能还可以")]),t._v(" "),s("p",[t._v("同时为了保证整条链路的对象都是新对象，会根据 "),s("code",[t._v("parent")]),t._v(" 属性递归父级，不断浅拷贝，直到这个叶子节点到根节点整条链路对象都换新为止")]),t._v(" "),s("h3",{attrs:{id:"生成-immutable-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成-immutable-对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成 Immutable 对象")]),t._v(" "),s("p",[t._v("当执行完 "),s("code",[t._v("produce")]),t._v(" 后，用户的所有修改已经完成（所以 "),s("code",[t._v("Immer")]),t._v(" 没有支持异步），如果 "),s("code",[t._v("modified")]),t._v(" 属性为 "),s("code",[t._v("false")]),t._v(" ，说明用户根本没有更改这个对象，那直接返回原始 "),s("code",[t._v("base")]),t._v(" 属性即可")]),t._v(" "),s("p",[t._v("如果 "),s("code",[t._v("modified")]),t._v(" 属性为 "),s("code",[t._v("true")]),t._v("，说明对象发生了改变，返回 "),s("code",[t._v("copy")]),t._v(" 属性即可。但是 "),s("code",[t._v("setter")]),t._v(" 过程是递归的，"),s("code",[t._v("draft")]),t._v(" 的子对象也是 "),s("code",[t._v("draft")]),t._v("（包含了 "),s("code",[t._v("base")]),t._v("、"),s("code",[t._v("copy")]),t._v("、"),s("code",[t._v("modified")]),t._v(" 等额外属性的代理），我们必须一层层递归，拿到真正的值")]),t._v(" "),s("p",[t._v("所以在这个阶段，所有 "),s("code",[t._v("draft")]),t._v(" 的 "),s("code",[t._v("finalized")]),t._v(" 都是 "),s("code",[t._v("false")]),t._v("、"),s("code",[t._v("copy")]),t._v(" 内部可能还存在大量 "),s("code",[t._v("draft")]),t._v(" 属性，因此递归 "),s("code",[t._v("base")]),t._v(" 与 "),s("code",[t._v("copy")]),t._v(" 的子属性，如果相同，就直接返回；如果不同，递归一次整个过程")]),t._v(" "),s("p",[t._v("最后返回的对象是由 "),s("code",[t._v("base")]),t._v(" 的一些属性（没有修改的部分）和 "),s("code",[t._v("copy")]),t._v(" 的一些属性（修改的部分）最终拼接而成的。最后使用 "),s("code",[t._v("freeze")]),t._v(" 冻结 "),s("code",[t._v("copy")]),t._v(" 属性，将 "),s("code",[t._v("finalized")]),t._v(" 属性设置为 "),s("code",[t._v("true")])]),t._v(" "),s("p",[t._v("至此，返回值生成完毕，我们将最终值保存在 "),s("code",[t._v("copy")]),t._v(" 属性上，并将其冻结，返回了 "),s("code",[t._v("Immutable")]),t._v(" 的值")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Immer` 因此完成了不可思议的操作：`Create the next immutable state by mutating the current one\n")])])]),s("blockquote",[s("p",[t._v("源码读到这里，发现 Immer 其实可以支持异步，只要支持 produce 函数返回 Promise 即可。最大的问题是，最后对代理的 "),s("code",[t._v("revoke")]),t._v(" 清洗，需要借助全局变量，这一点阻碍了 Immer 对异步的支持。")])])])},[],!1,null,null,null);a.default=e.exports}}]);